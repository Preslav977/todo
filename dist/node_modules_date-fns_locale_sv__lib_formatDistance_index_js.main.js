"use strict";
(self["webpackChunktemplate_repository"] = self["webpackChunktemplate_repository"] || []).push([["node_modules_date-fns_locale_sv__lib_formatDistance_index_js"],{

/***/ "./node_modules/date-fns/locale/sv/_lib/formatDistance/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/date-fns/locale/sv/_lib/formatDistance/index.js ***!
  \**********************************************************************/
/***/ ((module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'mindre än en sekund',
    other: 'mindre än {{count}} sekunder'
  },
  xSeconds: {
    one: 'en sekund',
    other: '{{count}} sekunder'
  },
  halfAMinute: 'en halv minut',
  lessThanXMinutes: {
    one: 'mindre än en minut',
    other: 'mindre än {{count}} minuter'
  },
  xMinutes: {
    one: 'en minut',
    other: '{{count}} minuter'
  },
  aboutXHours: {
    one: 'ungefär en timme',
    other: 'ungefär {{count}} timmar'
  },
  xHours: {
    one: 'en timme',
    other: '{{count}} timmar'
  },
  xDays: {
    one: 'en dag',
    other: '{{count}} dagar'
  },
  aboutXWeeks: {
    one: 'ungefär en vecka',
    other: 'ungefär {{count}} vecka'
  },
  xWeeks: {
    one: 'en vecka',
    other: '{{count}} vecka'
  },
  aboutXMonths: {
    one: 'ungefär en månad',
    other: 'ungefär {{count}} månader'
  },
  xMonths: {
    one: 'en månad',
    other: '{{count}} månader'
  },
  aboutXYears: {
    one: 'ungefär ett år',
    other: 'ungefär {{count}} år'
  },
  xYears: {
    one: 'ett år',
    other: '{{count}} år'
  },
  overXYears: {
    one: 'över ett år',
    other: 'över {{count}} år'
  },
  almostXYears: {
    one: 'nästan ett år',
    other: 'nästan {{count}} år'
  }
};
var wordMapping = ['noll', 'en', 'två', 'tre', 'fyra', 'fem', 'sex', 'sju', 'åtta', 'nio', 'tio', 'elva', 'tolv'];
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    if (options && options.onlyNumeric) {
      result = tokenValue.other.replace('{{count}}', String(count));
    } else {
      result = tokenValue.other.replace('{{count}}', count < 13 ? wordMapping[count] : String(count));
    }
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'om ' + result;
    } else {
      return result + ' sedan';
    }
  }
  return result;
};
var _default = formatDistance;
exports["default"] = _default;
module.exports = exports.default;

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2RhdGUtZm5zX2xvY2FsZV9zdl9fbGliX2Zvcm1hdERpc3RhbmNlX2luZGV4X2pzLm1haW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQyxHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEMsR0FBRztBQUNIO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsR0FBRztBQUNIO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTtBQUM5QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLEdBQUc7QUFDSDtBQUNBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUIsR0FBRztBQUNIO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsR0FBRztBQUNIO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTtBQUM5QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLG1CQUFtQixRQUFRO0FBQzNCLEdBQUc7QUFDSDtBQUNBO0FBQ0EscUJBQXFCLFFBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLDJDQUEyQyxPQUFPO0FBQ2xELE1BQU07QUFDTiwyQ0FBMkMsT0FBTztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZXBvc2l0b3J5Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9zdi9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiAnbWluZHJlIMOkbiBlbiBzZWt1bmQnLFxuICAgIG90aGVyOiAnbWluZHJlIMOkbiB7e2NvdW50fX0gc2VrdW5kZXInXG4gIH0sXG4gIHhTZWNvbmRzOiB7XG4gICAgb25lOiAnZW4gc2VrdW5kJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBzZWt1bmRlcidcbiAgfSxcbiAgaGFsZkFNaW51dGU6ICdlbiBoYWx2IG1pbnV0JyxcbiAgbGVzc1RoYW5YTWludXRlczoge1xuICAgIG9uZTogJ21pbmRyZSDDpG4gZW4gbWludXQnLFxuICAgIG90aGVyOiAnbWluZHJlIMOkbiB7e2NvdW50fX0gbWludXRlcidcbiAgfSxcbiAgeE1pbnV0ZXM6IHtcbiAgICBvbmU6ICdlbiBtaW51dCcsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gbWludXRlcidcbiAgfSxcbiAgYWJvdXRYSG91cnM6IHtcbiAgICBvbmU6ICd1bmdlZsOkciBlbiB0aW1tZScsXG4gICAgb3RoZXI6ICd1bmdlZsOkciB7e2NvdW50fX0gdGltbWFyJ1xuICB9LFxuICB4SG91cnM6IHtcbiAgICBvbmU6ICdlbiB0aW1tZScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gdGltbWFyJ1xuICB9LFxuICB4RGF5czoge1xuICAgIG9uZTogJ2VuIGRhZycsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gZGFnYXInXG4gIH0sXG4gIGFib3V0WFdlZWtzOiB7XG4gICAgb25lOiAndW5nZWbDpHIgZW4gdmVja2EnLFxuICAgIG90aGVyOiAndW5nZWbDpHIge3tjb3VudH19IHZlY2thJ1xuICB9LFxuICB4V2Vla3M6IHtcbiAgICBvbmU6ICdlbiB2ZWNrYScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gdmVja2EnXG4gIH0sXG4gIGFib3V0WE1vbnRoczoge1xuICAgIG9uZTogJ3VuZ2Vmw6RyIGVuIG3DpW5hZCcsXG4gICAgb3RoZXI6ICd1bmdlZsOkciB7e2NvdW50fX0gbcOlbmFkZXInXG4gIH0sXG4gIHhNb250aHM6IHtcbiAgICBvbmU6ICdlbiBtw6VuYWQnLFxuICAgIG90aGVyOiAne3tjb3VudH19IG3DpW5hZGVyJ1xuICB9LFxuICBhYm91dFhZZWFyczoge1xuICAgIG9uZTogJ3VuZ2Vmw6RyIGV0dCDDpXInLFxuICAgIG90aGVyOiAndW5nZWbDpHIge3tjb3VudH19IMOlcidcbiAgfSxcbiAgeFllYXJzOiB7XG4gICAgb25lOiAnZXR0IMOlcicsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gw6VyJ1xuICB9LFxuICBvdmVyWFllYXJzOiB7XG4gICAgb25lOiAnw7Z2ZXIgZXR0IMOlcicsXG4gICAgb3RoZXI6ICfDtnZlciB7e2NvdW50fX0gw6VyJ1xuICB9LFxuICBhbG1vc3RYWWVhcnM6IHtcbiAgICBvbmU6ICduw6RzdGFuIGV0dCDDpXInLFxuICAgIG90aGVyOiAnbsOkc3RhbiB7e2NvdW50fX0gw6VyJ1xuICB9XG59O1xudmFyIHdvcmRNYXBwaW5nID0gWydub2xsJywgJ2VuJywgJ3R2w6UnLCAndHJlJywgJ2Z5cmEnLCAnZmVtJywgJ3NleCcsICdzanUnLCAnw6V0dGEnLCAnbmlvJywgJ3RpbycsICdlbHZhJywgJ3RvbHYnXTtcbnZhciBmb3JtYXREaXN0YW5jZSA9IGZ1bmN0aW9uIGZvcm1hdERpc3RhbmNlKHRva2VuLCBjb3VudCwgb3B0aW9ucykge1xuICB2YXIgcmVzdWx0O1xuICB2YXIgdG9rZW5WYWx1ZSA9IGZvcm1hdERpc3RhbmNlTG9jYWxlW3Rva2VuXTtcbiAgaWYgKHR5cGVvZiB0b2tlblZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWU7XG4gIH0gZWxzZSBpZiAoY291bnQgPT09IDEpIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm9uZTtcbiAgfSBlbHNlIHtcbiAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm9ubHlOdW1lcmljKSB7XG4gICAgICByZXN1bHQgPSB0b2tlblZhbHVlLm90aGVyLnJlcGxhY2UoJ3t7Y291bnR9fScsIFN0cmluZyhjb3VudCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSB0b2tlblZhbHVlLm90aGVyLnJlcGxhY2UoJ3t7Y291bnR9fScsIGNvdW50IDwgMTMgPyB3b3JkTWFwcGluZ1tjb3VudF0gOiBTdHJpbmcoY291bnQpKTtcbiAgICB9XG4gIH1cbiAgaWYgKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMuYWRkU3VmZml4KSB7XG4gICAgaWYgKG9wdGlvbnMuY29tcGFyaXNvbiAmJiBvcHRpb25zLmNvbXBhcmlzb24gPiAwKSB7XG4gICAgICByZXR1cm4gJ29tICcgKyByZXN1bHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXN1bHQgKyAnIHNlZGFuJztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX2RlZmF1bHQgPSBmb3JtYXREaXN0YW5jZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9