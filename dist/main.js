(()=>{"use strict";class t{constructor(t,e,s,i,o){this.title=t,this.description=e,this.dueDate=s,this.priority=i,this.id=crypto.randomUUID()}get title(){return this._title}set title(t){t.length<5?console.log("The title of this todo, is too short, 5 characters at least"):this._title=t}get description(){return this._description}set description(t){t.length<10?console.log("The description of this todo is too short, 10 characters at least"):this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get id(){return this.id}set id(t){this._id=t}}const e=new class{projects=[];constructor(t,e){this.title=t,this.id=crypto.randomUUID()}get title(){return this._title}set title(t){t.length<5&&console.log("Project name is too short, 5 characters at least"),this._title=t}get id(){return this._id}set id(t){this._id=t}addProjects(t){this.projects.push(t)}deleteProjects(t){this.projects.splice(t,1)}}("Default");e.addProjects(e),console.log(e.projects);const s=new class{todos=[];constructor(t,e){this.title=t,this.id=crypto.randomUUID()}get title(){return this._title}set title(t){t.length<5&&console.log("Project name is too short, 5 characters at least"),this._title=t}addToDo(t){this.todos.push(t)}deleteToDo(t){this.todos.splice(t,1)}}("Default"),i=new t("fixing bugs","on my todo class","20/5/2024","high"),o=new t("fixing other stuff","on my other class","22/5/2024","medium"),r=new t("taking a break","after fixing the errors","20/5/2024","low");s.addToDo(i),s.addToDo(o),s.addToDo(r),console.log(s.todos)})();