"use strict";
(self["webpackChunktemplate_repository"] = self["webpackChunktemplate_repository"] || []).push([["node_modules_date-fns_locale_nn__lib_formatDistance_index_js"],{

/***/ "./node_modules/date-fns/locale/nn/_lib/formatDistance/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/date-fns/locale/nn/_lib/formatDistance/index.js ***!
  \**********************************************************************/
/***/ ((module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'mindre enn eitt sekund',
    other: 'mindre enn {{count}} sekund'
  },
  xSeconds: {
    one: 'eitt sekund',
    other: '{{count}} sekund'
  },
  halfAMinute: 'eit halvt minutt',
  lessThanXMinutes: {
    one: 'mindre enn eitt minutt',
    other: 'mindre enn {{count}} minutt'
  },
  xMinutes: {
    one: 'eitt minutt',
    other: '{{count}} minutt'
  },
  aboutXHours: {
    one: 'omtrent ein time',
    other: 'omtrent {{count}} timar'
  },
  xHours: {
    one: 'ein time',
    other: '{{count}} timar'
  },
  xDays: {
    one: 'ein dag',
    other: '{{count}} dagar'
  },
  aboutXWeeks: {
    one: 'omtrent ei veke',
    other: 'omtrent {{count}} veker'
  },
  xWeeks: {
    one: 'ei veke',
    other: '{{count}} veker'
  },
  aboutXMonths: {
    one: 'omtrent ein månad',
    other: 'omtrent {{count}} månader'
  },
  xMonths: {
    one: 'ein månad',
    other: '{{count}} månader'
  },
  aboutXYears: {
    one: 'omtrent eitt år',
    other: 'omtrent {{count}} år'
  },
  xYears: {
    one: 'eitt år',
    other: '{{count}} år'
  },
  overXYears: {
    one: 'over eitt år',
    other: 'over {{count}} år'
  },
  almostXYears: {
    one: 'nesten eitt år',
    other: 'nesten {{count}} år'
  }
};
var wordMapping = ['null', 'ein', 'to', 'tre', 'fire', 'fem', 'seks', 'sju', 'åtte', 'ni', 'ti', 'elleve', 'tolv'];
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    if (options && options.onlyNumeric) {
      result = tokenValue.other.replace('{{count}}', String(count));
    } else {
      result = tokenValue.other.replace('{{count}}', count < 13 ? wordMapping[count] : String(count));
    }
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'om ' + result;
    } else {
      return result + ' sidan';
    }
  }
  return result;
};
var _default = formatDistance;
exports["default"] = _default;
module.exports = exports.default;

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2RhdGUtZm5zX2xvY2FsZV9ubl9fbGliX2Zvcm1hdERpc3RhbmNlX2luZGV4X2pzLm1haW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQyxHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFFBQVE7QUFDakMsR0FBRztBQUNIO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsR0FBRztBQUNIO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTtBQUM5QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCLEdBQUc7QUFDSDtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLEdBQUc7QUFDSDtBQUNBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUIsR0FBRztBQUNIO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsR0FBRztBQUNIO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTtBQUM5QixHQUFHO0FBQ0g7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixHQUFHO0FBQ0g7QUFDQTtBQUNBLG1CQUFtQixRQUFRO0FBQzNCLEdBQUc7QUFDSDtBQUNBO0FBQ0EscUJBQXFCLFFBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLDJDQUEyQyxPQUFPO0FBQ2xELE1BQU07QUFDTiwyQ0FBMkMsT0FBTztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZXBvc2l0b3J5Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9ubi9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiAnbWluZHJlIGVubiBlaXR0IHNla3VuZCcsXG4gICAgb3RoZXI6ICdtaW5kcmUgZW5uIHt7Y291bnR9fSBzZWt1bmQnXG4gIH0sXG4gIHhTZWNvbmRzOiB7XG4gICAgb25lOiAnZWl0dCBzZWt1bmQnLFxuICAgIG90aGVyOiAne3tjb3VudH19IHNla3VuZCdcbiAgfSxcbiAgaGFsZkFNaW51dGU6ICdlaXQgaGFsdnQgbWludXR0JyxcbiAgbGVzc1RoYW5YTWludXRlczoge1xuICAgIG9uZTogJ21pbmRyZSBlbm4gZWl0dCBtaW51dHQnLFxuICAgIG90aGVyOiAnbWluZHJlIGVubiB7e2NvdW50fX0gbWludXR0J1xuICB9LFxuICB4TWludXRlczoge1xuICAgIG9uZTogJ2VpdHQgbWludXR0JyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBtaW51dHQnXG4gIH0sXG4gIGFib3V0WEhvdXJzOiB7XG4gICAgb25lOiAnb210cmVudCBlaW4gdGltZScsXG4gICAgb3RoZXI6ICdvbXRyZW50IHt7Y291bnR9fSB0aW1hcidcbiAgfSxcbiAgeEhvdXJzOiB7XG4gICAgb25lOiAnZWluIHRpbWUnLFxuICAgIG90aGVyOiAne3tjb3VudH19IHRpbWFyJ1xuICB9LFxuICB4RGF5czoge1xuICAgIG9uZTogJ2VpbiBkYWcnLFxuICAgIG90aGVyOiAne3tjb3VudH19IGRhZ2FyJ1xuICB9LFxuICBhYm91dFhXZWVrczoge1xuICAgIG9uZTogJ29tdHJlbnQgZWkgdmVrZScsXG4gICAgb3RoZXI6ICdvbXRyZW50IHt7Y291bnR9fSB2ZWtlcidcbiAgfSxcbiAgeFdlZWtzOiB7XG4gICAgb25lOiAnZWkgdmVrZScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gdmVrZXInXG4gIH0sXG4gIGFib3V0WE1vbnRoczoge1xuICAgIG9uZTogJ29tdHJlbnQgZWluIG3DpW5hZCcsXG4gICAgb3RoZXI6ICdvbXRyZW50IHt7Y291bnR9fSBtw6VuYWRlcidcbiAgfSxcbiAgeE1vbnRoczoge1xuICAgIG9uZTogJ2VpbiBtw6VuYWQnLFxuICAgIG90aGVyOiAne3tjb3VudH19IG3DpW5hZGVyJ1xuICB9LFxuICBhYm91dFhZZWFyczoge1xuICAgIG9uZTogJ29tdHJlbnQgZWl0dCDDpXInLFxuICAgIG90aGVyOiAnb210cmVudCB7e2NvdW50fX0gw6VyJ1xuICB9LFxuICB4WWVhcnM6IHtcbiAgICBvbmU6ICdlaXR0IMOlcicsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gw6VyJ1xuICB9LFxuICBvdmVyWFllYXJzOiB7XG4gICAgb25lOiAnb3ZlciBlaXR0IMOlcicsXG4gICAgb3RoZXI6ICdvdmVyIHt7Y291bnR9fSDDpXInXG4gIH0sXG4gIGFsbW9zdFhZZWFyczoge1xuICAgIG9uZTogJ25lc3RlbiBlaXR0IMOlcicsXG4gICAgb3RoZXI6ICduZXN0ZW4ge3tjb3VudH19IMOlcidcbiAgfVxufTtcbnZhciB3b3JkTWFwcGluZyA9IFsnbnVsbCcsICdlaW4nLCAndG8nLCAndHJlJywgJ2ZpcmUnLCAnZmVtJywgJ3Nla3MnLCAnc2p1JywgJ8OldHRlJywgJ25pJywgJ3RpJywgJ2VsbGV2ZScsICd0b2x2J107XG52YXIgZm9ybWF0RGlzdGFuY2UgPSBmdW5jdGlvbiBmb3JtYXREaXN0YW5jZSh0b2tlbiwgY291bnQsIG9wdGlvbnMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgdmFyIHRva2VuVmFsdWUgPSBmb3JtYXREaXN0YW5jZUxvY2FsZVt0b2tlbl07XG4gIGlmICh0eXBlb2YgdG9rZW5WYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlO1xuICB9IGVsc2UgaWYgKGNvdW50ID09PSAxKSB7XG4gICAgcmVzdWx0ID0gdG9rZW5WYWx1ZS5vbmU7XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5vbmx5TnVtZXJpYykge1xuICAgICAgcmVzdWx0ID0gdG9rZW5WYWx1ZS5vdGhlci5yZXBsYWNlKCd7e2NvdW50fX0nLCBTdHJpbmcoY291bnQpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ID0gdG9rZW5WYWx1ZS5vdGhlci5yZXBsYWNlKCd7e2NvdW50fX0nLCBjb3VudCA8IDEzID8gd29yZE1hcHBpbmdbY291bnRdIDogU3RyaW5nKGNvdW50KSk7XG4gICAgfVxuICB9XG4gIGlmIChvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCAmJiBvcHRpb25zLmFkZFN1ZmZpeCkge1xuICAgIGlmIChvcHRpb25zLmNvbXBhcmlzb24gJiYgb3B0aW9ucy5jb21wYXJpc29uID4gMCkge1xuICAgICAgcmV0dXJuICdvbSAnICsgcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcmVzdWx0ICsgJyBzaWRhbic7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9kZWZhdWx0ID0gZm9ybWF0RGlzdGFuY2U7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==